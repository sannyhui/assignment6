// Generated by view binder compiler. Do not edit!
package com.example.testnumberpicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.NumberPicker;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testnumberpicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button giveup;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final NumberPicker numberPicker1;

  @NonNull
  public final NumberPicker numberPicker2;

  @NonNull
  public final NumberPicker numberPicker3;

  @NonNull
  public final NumberPicker numberPicker4;

  @NonNull
  public final Button resultButton;

  @NonNull
  public final TextView resultString;

  @NonNull
  public final TextView secretNumber1;

  @NonNull
  public final TextView secretNumber2;

  @NonNull
  public final TextView secretNumber3;

  @NonNull
  public final TextView secretNumber4;

  @NonNull
  public final Switch switch1;

  @NonNull
  public final TextView textView01;

  @NonNull
  public final TextView textView02;

  @NonNull
  public final ImageView tipsIcon;

  @NonNull
  public final TextView tipsText;

  @NonNull
  public final TextView turnNumber;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button giveup,
      @NonNull ConstraintLayout main, @NonNull NumberPicker numberPicker1,
      @NonNull NumberPicker numberPicker2, @NonNull NumberPicker numberPicker3,
      @NonNull NumberPicker numberPicker4, @NonNull Button resultButton,
      @NonNull TextView resultString, @NonNull TextView secretNumber1,
      @NonNull TextView secretNumber2, @NonNull TextView secretNumber3,
      @NonNull TextView secretNumber4, @NonNull Switch switch1, @NonNull TextView textView01,
      @NonNull TextView textView02, @NonNull ImageView tipsIcon, @NonNull TextView tipsText,
      @NonNull TextView turnNumber) {
    this.rootView = rootView;
    this.giveup = giveup;
    this.main = main;
    this.numberPicker1 = numberPicker1;
    this.numberPicker2 = numberPicker2;
    this.numberPicker3 = numberPicker3;
    this.numberPicker4 = numberPicker4;
    this.resultButton = resultButton;
    this.resultString = resultString;
    this.secretNumber1 = secretNumber1;
    this.secretNumber2 = secretNumber2;
    this.secretNumber3 = secretNumber3;
    this.secretNumber4 = secretNumber4;
    this.switch1 = switch1;
    this.textView01 = textView01;
    this.textView02 = textView02;
    this.tipsIcon = tipsIcon;
    this.tipsText = tipsText;
    this.turnNumber = turnNumber;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.giveup;
      Button giveup = ViewBindings.findChildViewById(rootView, id);
      if (giveup == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.numberPicker1;
      NumberPicker numberPicker1 = ViewBindings.findChildViewById(rootView, id);
      if (numberPicker1 == null) {
        break missingId;
      }

      id = R.id.numberPicker2;
      NumberPicker numberPicker2 = ViewBindings.findChildViewById(rootView, id);
      if (numberPicker2 == null) {
        break missingId;
      }

      id = R.id.numberPicker3;
      NumberPicker numberPicker3 = ViewBindings.findChildViewById(rootView, id);
      if (numberPicker3 == null) {
        break missingId;
      }

      id = R.id.numberPicker4;
      NumberPicker numberPicker4 = ViewBindings.findChildViewById(rootView, id);
      if (numberPicker4 == null) {
        break missingId;
      }

      id = R.id.resultButton;
      Button resultButton = ViewBindings.findChildViewById(rootView, id);
      if (resultButton == null) {
        break missingId;
      }

      id = R.id.resultString;
      TextView resultString = ViewBindings.findChildViewById(rootView, id);
      if (resultString == null) {
        break missingId;
      }

      id = R.id.secretNumber1;
      TextView secretNumber1 = ViewBindings.findChildViewById(rootView, id);
      if (secretNumber1 == null) {
        break missingId;
      }

      id = R.id.secretNumber2;
      TextView secretNumber2 = ViewBindings.findChildViewById(rootView, id);
      if (secretNumber2 == null) {
        break missingId;
      }

      id = R.id.secretNumber3;
      TextView secretNumber3 = ViewBindings.findChildViewById(rootView, id);
      if (secretNumber3 == null) {
        break missingId;
      }

      id = R.id.secretNumber4;
      TextView secretNumber4 = ViewBindings.findChildViewById(rootView, id);
      if (secretNumber4 == null) {
        break missingId;
      }

      id = R.id.switch1;
      Switch switch1 = ViewBindings.findChildViewById(rootView, id);
      if (switch1 == null) {
        break missingId;
      }

      id = R.id.textView01;
      TextView textView01 = ViewBindings.findChildViewById(rootView, id);
      if (textView01 == null) {
        break missingId;
      }

      id = R.id.textView02;
      TextView textView02 = ViewBindings.findChildViewById(rootView, id);
      if (textView02 == null) {
        break missingId;
      }

      id = R.id.tipsIcon;
      ImageView tipsIcon = ViewBindings.findChildViewById(rootView, id);
      if (tipsIcon == null) {
        break missingId;
      }

      id = R.id.tipsText;
      TextView tipsText = ViewBindings.findChildViewById(rootView, id);
      if (tipsText == null) {
        break missingId;
      }

      id = R.id.turnNumber;
      TextView turnNumber = ViewBindings.findChildViewById(rootView, id);
      if (turnNumber == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, giveup, main, numberPicker1,
          numberPicker2, numberPicker3, numberPicker4, resultButton, resultString, secretNumber1,
          secretNumber2, secretNumber3, secretNumber4, switch1, textView01, textView02, tipsIcon,
          tipsText, turnNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
